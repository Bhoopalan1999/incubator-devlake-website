"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[2079],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={title:"Developer Setup",description:"The steps to install DevLake in developer mode.\n",sidebar_position:1},l=void 0,i={unversionedId:"DeveloperManuals/DeveloperSetup",id:"DeveloperManuals/DeveloperSetup",title:"Developer Setup",description:"The steps to install DevLake in developer mode.\n",source:"@site/docs/DeveloperManuals/DeveloperSetup.md",sourceDirName:"DeveloperManuals",slug:"/DeveloperManuals/DeveloperSetup",permalink:"/docs/DeveloperManuals/DeveloperSetup",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/DeveloperManuals/DeveloperSetup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Developer Setup",description:"The steps to install DevLake in developer mode.\n",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Developer Manuals",permalink:"/docs/DeveloperManuals"},next:{title:"Plugin Implementation",permalink:"/docs/DeveloperManuals/PluginImplementation"}},p={},s=[{value:"Requirements",id:"requirements",level:2},{value:"How to setup dev environment",id:"how-to-setup-dev-environment",level:2},{value:"Running Tests",id:"running-tests",level:2},{value:"DB migrations",id:"db-migrations",level:2},{value:"Using DevLake API",id:"using-devlake-api",level:2},{value:"Developing dashboards",id:"developing-dashboards",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Compiling",id:"compiling",level:2}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{href:"https://docs.docker.com/get-docker",target:"_blank"},"Docker v19.03.10+")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{href:"https://golang.org/doc/install",target:"_blank"},"Golang v1.19+")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{href:"https://www.gnu.org/software/make/",target:"_blank"},"GNU Make"),"- Mac (Preinstalled) - Windows: [Download](http://gnuwin32.sourceforge.net/packages/make.htm) - Ubuntu: `sudo apt-get install build-essential libssl-dev`")),(0,r.kt)("h2",{id:"how-to-setup-dev-environment"},"How to setup dev environment"),(0,r.kt)("p",null,"The following guide will walk through how to run DevLake's frontend (",(0,r.kt)("inlineCode",{parentName:"p"},"config-ui"),") and backend in dev mode."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to where you would like to install this project and clone the repository:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/apache/incubator-devlake\ncd incubator-devlake\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install dependencies for plugins:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/Plugins/refdiff#development"},"RefDiff")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Go packages"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"go get\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy the sample config file to new local file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cp .env.example .env\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update the following variables in the file ",(0,r.kt)("inlineCode",{parentName:"p"},".env"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DB_URL"),": Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"mysql:3306")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"127.0.0.1:3306")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the MySQL and Grafana containers:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Make sure the Docker daemon is running before this step.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"docker-compose up -d mysql grafana\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"devlake")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"config-ui")," in dev mode in two separate terminals:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# run devlake\nmake dev\n# run config-ui\nmake configure-dev\n")),(0,r.kt)("p",{parentName:"li"},"For common errors, please see ",(0,r.kt)("a",{parentName:"p",href:"#troubleshotting"},"Troubleshooting"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Config UI is running at ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:4000")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For how to use Config UI, please refer to our ",(0,r.kt)("a",{parentName:"li",href:"/docs/UserManuals/ConfigUI/Tutorial"},"tutorial"))))),(0,r.kt)("h2",{id:"running-tests"},"Running Tests"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# install mockery\ngo install github.com/vektra/mockery/v2@latest\n# generate mocking stubs\nmake mock\n# run tests\nmake test\n")),(0,r.kt)("h2",{id:"db-migrations"},"DB migrations"),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/DeveloperManuals/DBMigration"},"Migration Doc"),"."),(0,r.kt)("h2",{id:"using-devlake-api"},"Using DevLake API"),(0,r.kt)("p",null,"All DevLake APIs (core service + plugin API) are documented with swagger. To see API doc live with swagger:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- Install [swag](https://github.com/swaggo/swag).\n- Run `make swag` to generate the swagger documentation.\n- Visit `http://localhost:8080/swagger/index.html` while `devlake` is running.\n")),(0,r.kt)("h2",{id:"developing-dashboards"},"Developing dashboards"),(0,r.kt)("p",null,"To access Grafana, click ",(0,r.kt)("em",{parentName:"p"},"View Dashboards")," button in the top left corner of Config UI, or visit ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:3002")," (username: ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),", password: ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),")."),(0,r.kt)("p",null,"For provisioning, customizing, and creating dashboards, please refer to our ",(0,r.kt)("a",{parentName:"p",href:"/docs/UserManuals/Dashboards/GrafanaUserGuide"},"Grafana Doc"),"."),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Q: Running `make dev` yields error: `libgit2.so.1.3: cannot open share object file: No such file or directory`\n\nA: `libgit2.so.1.3` is required by the gitextractor plugin and should be . Make sure your program can find `libgit2.so.1.3`. `LD_LIBRARY_PATH` can be assigned like this if your `libgit2.so.1.3` is located at `/usr/local/lib`:\n\n```sh\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib\n```\n\nNote that the version has to be pinned to 1.3.0. If you don't have it, you may need to build it manually with CMake from [source](https://github.com/libgit2/libgit2/releases/tag/v1.3.0).\n")),(0,r.kt)("h2",{id:"compiling"},"Compiling"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- Compile all plugins: `make build-plugin`\n- Compile specific plugins: `PLUGIN=<PLUGIN_NAME> make build-plugin`\n- Compile server: `make build`\n- Compile worker: `make build-worker`\n")))}d.isMDXComponent=!0}}]);